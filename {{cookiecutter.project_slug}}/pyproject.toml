[tool]
[tool.poetry]
name = "{{ cookiecutter.package_name }}"
version = "0.1.0"
description = "{{ cookiecutter.project_short_description }}."
authors = ["{{ cookiecutter.author_name }} <{{ cookiecutter.email }}>"]
readme = "README.md"
packages = [
    { include = "{{ cookiecutter.package_name }}", from = "src" }
]


[tool.poetry.dependencies]
python = "^3.9"
{% if cookiecutter.include_cli == "y" %}
click = "^8.0.1"
{% endif %}
black = {version = "^21.9b0", optional = true}
isort = {version = "^5.9.3", optional = true}
flake8 = {version = "^3.9.2", optional = true}
pre-commit = {version = "^2.12.0", optional = true}
{% if cookiecutter.include_pytest == "y" %}
pytest = {version = "^6.2.5", optional = true}
{% endif %}
{% if cookiecutter.include_mkdocs == "y" %}
mkdocs = {version = "^1.6.0", optional = true}
mkdocs-include-markdown-plugin = {version = "^6.0.6", optional = true}
mkdocs-material = {version = "^9.5.24", optional = true}
mkdocstrings = {version = "^0.19.0", optional = true}
mkdocs-material-extensions = {version = "^1.1.1", optional = true}
{% endif %}

[tool.poetry.extras]
dev = [
    "black", "isort", "flake8",
    "pre-commit"{% if cookiecutter.include_pytest == "y" %},
    "pytest"{% endif %}{% if cookiecutter.include_mkdocs == "y" %},
    "mkdocs", "mkdocs-include-markdown-plugin",
    "mkdocs-material", "mkdocstrings", "mkdocs-material-extensions"
    {% endif %}
    ]
{% if cookiecutter.include_cli == "y" %}
[tool.poetry.scripts]
{{ cookiecutter.project_slug }} = '{{ cookiecutter.package_name }}.cli:main'
{% endif %}

[tool.black]
line-length = 100
# skip-string-normalization = true
# target-version = ['py36', 'py37', 'py38']
# include = '\.pyi?$'
# exclude = '''
# /(
#     \.eggs
#   | \.git
#   | \.hg
#   | \.mypy_cache
#   | \.tox
#   | \.venv
#   | _build
#   | buck-out
#   | build
#   | dist
# )/
# '''

# [tool.isort]
# multi_line_output = 3
# include_trailing_comma = true
# force_grid_wrap = 0
# use_parentheses = true
# ensure_newline_before_comments = true
# line_length = 120
# skip_gitignore = true
# # you can skip files as below
# #skip_glob = docs/conf.py

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"