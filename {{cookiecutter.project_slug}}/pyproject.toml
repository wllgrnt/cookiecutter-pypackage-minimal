[tool.poetry]
name = "{{ cookiecutter.package_name }}"
version = "0.1.0"
description = "{{ cookiecutter.project_short_description }}."
authors = ["{{ cookiecutter.author_name }} <{{ cookiecutter.email }}>"]
readme = "README.md"
packages = [
    { include = "{{ cookiecutter.package_name }}", from = "src" }
]


[tool.poetry.dependencies]
python = "^3.9"
{% if cookiecutter.include_cli == "y" %}
click = "^8.0.1"
{% endif %}

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
black = "^21.9b0"
isort = "^5.9.3"
flake8 = "^3.9.2"
{% if cookiecutter.include_pytest == "y" %}
pytest = "^6.2.5"
{% endif %}
pre-commit = "^2.12.0"


# TODO mkdocs
{% if cookiecutter.include_mkdocs == "y" %}
mkdocs = "^1.4.2"
mkdocs-include-markdown-plugin = "^3.10.0"
mkdocs-material = "^9.0.3"
mkdocstrings = "^0.19.0"
mkdocs-material-extensions = "^1.1.1"
{% endif %}


{% if cookiecutter.include_cli == "y" %}
click = "8.0.1"
{% endif %}


{% if cookiecutter.include_cli == "y" %}
[tool.poetry.scripts]
{{ cookiecutter.project_slug }} = '{{ cookiecutter.package_name }}.cli:main'

{% endif %}

[tool.black]
line-length = 100
# skip-string-normalization = true
# target-version = ['py36', 'py37', 'py38']
# include = '\.pyi?$'
# exclude = '''
# /(
#     \.eggs
#   | \.git
#   | \.hg
#   | \.mypy_cache
#   | \.tox
#   | \.venv
#   | _build
#   | buck-out
#   | build
#   | dist
# )/
# '''

# [tool.isort]
# multi_line_output = 3
# include_trailing_comma = true
# force_grid_wrap = 0
# use_parentheses = true
# ensure_newline_before_comments = true
# line_length = 120
# skip_gitignore = true
# # you can skip files as below
# #skip_glob = docs/conf.py

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"